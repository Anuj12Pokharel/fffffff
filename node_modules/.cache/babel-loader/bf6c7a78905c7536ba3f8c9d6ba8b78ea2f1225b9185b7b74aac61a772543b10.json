{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\New folder (2)\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConversationalForm({\n  onSubmit\n}) {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"http://localhost:5000/submit-form\", {\n        name,\n        email,\n        phone,\n        date\n      });\n      alert(res.data.message); // Show confirmation message\n      onSubmit(); // Close the form after submission\n    } catch (err) {\n      alert(err.response.data); // Show error if any validation fails\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      placeholder: \"Name\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Email\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"tel\",\n      value: phone,\n      onChange: e => setPhone(e.target.value),\n      placeholder: \"Phone Number\",\n      required: true,\n      pattern: \"\\\\d{10}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: date,\n      onChange: e => setDate(e.target.value),\n      placeholder: \"Appointment Date (e.g., Next Monday)\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(ConversationalForm, \"hK1Z8iVZmeXzR9hICb6JEFGll8Q=\");\n_c = ConversationalForm;\nfunction App() {\n  _s2();\n  const [query, setQuery] = useState(\"\");\n  const [responseData, setResponseData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const handleQueryChange = e => {\n    setQuery(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"http://localhost:5000/query\", {\n        query\n      });\n      setResponseData(res.data.response); // Display response from the chatbot\n\n      if (res.data.showForm) {\n        setShowForm(true); // Show the form if the response contains \"call me\"\n      } else {\n        setShowForm(false); // Hide the form otherwise\n      }\n      setError(\"\"); // Clear previous errors\n    } catch (err) {\n      console.error(err);\n      setError(\"Error querying Gemini LLM\"); // Handle query error\n    }\n  };\n  const handleDateParse = async text => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/parse-date\", {\n        text\n      });\n      console.log(\"Parsed Date:\", res.data.date); // Use parsed date as needed\n    } catch (err) {\n      console.error(\"Error parsing date:\", err.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: handleQueryChange,\n        placeholder: \"Ask a question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), \" \", responseData && /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(responseData, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 24\n    }, this), \" \", showForm && /*#__PURE__*/_jsxDEV(ConversationalForm, {\n      onSubmit: () => setShowForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 20\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"WYIJIEzr/0oKtZ9wUapGJwfnvrw=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ConversationalForm\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ConversationalForm","onSubmit","_s","name","setName","email","setEmail","phone","setPhone","date","setDate","handleSubmit","e","preventDefault","res","post","alert","data","message","err","response","children","type","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","pattern","_c","App","_s2","query","setQuery","responseData","setResponseData","error","setError","showForm","setShowForm","handleQueryChange","console","handleDateParse","text","log","JSON","stringify","_c2","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/New folder (2)/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport './App.css'; \n\nfunction ConversationalForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"http://localhost:5000/submit-form\", { name, email, phone, date });\n      alert(res.data.message); // Show confirmation message\n      onSubmit(); // Close the form after submission\n    } catch (err) {\n      alert(err.response.data); // Show error if any validation fails\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Name\" required />\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" required />\n      <input type=\"tel\" value={phone} onChange={(e) => setPhone(e.target.value)} placeholder=\"Phone Number\" required pattern=\"\\d{10}\" />\n      <input type=\"text\" value={date} onChange={(e) => setDate(e.target.value)} placeholder=\"Appointment Date (e.g., Next Monday)\" required />\n      <button type=\"submit\">Book Appointment</button>\n    </form>\n  );\n}\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [responseData, setResponseData] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n\n  const handleQueryChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"http://localhost:5000/query\", { query });\n      setResponseData(res.data.response); // Display response from the chatbot\n\n      if (res.data.showForm) {\n        setShowForm(true); // Show the form if the response contains \"call me\"\n      } else {\n        setShowForm(false); // Hide the form otherwise\n      }\n\n      setError(\"\"); // Clear previous errors\n    } catch (err) {\n      console.error(err);\n      setError(\"Error querying Gemini LLM\"); // Handle query error\n    }\n  };\n\n  const handleDateParse = async (text) => {\n    try {\n      const res = await axios.post(\"http://localhost:5000/parse-date\", { text });\n      console.log(\"Parsed Date:\", res.data.date); // Use parsed date as needed\n    } catch (err) {\n      console.error(\"Error parsing date:\", err.response.data);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Chatbot</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleQueryChange}\n          placeholder=\"Ask a question\"\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n\n      {error && <p>{error}</p>} {/* Show error message */}\n      {responseData && <pre>{JSON.stringify(responseData, null, 2)}</pre>} {/* Show the chatbot's response */}\n\n      {showForm && <ConversationalForm onSubmit={() => setShowForm(false)} />} {/* Display the form if 'showForm' is true */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}